name: "Build and Test"

on:
  # Only run on branches, not tags:
  # https://github.com/orgs/community/discussions/25615#discussioncomment-3397691
  push:
    branches:
      - "**"
    tags:
      - "!**"
      # Also run for open pull requests, including when pushed to:
  pull_request: {}

jobs:

  build-test:
    runs-on: "ubuntu-latest"
    container:
      image: "ghcr.io/rpatterson/${{ github.event.repository.name }}:build-host"
      env:
        PUID: "1001"
        PGID: "123"
        CHECKOUT_DIR: "${{ github.workspace }}"
        # Requires the secrets to be added to GitHub either through the web UI or the
        # GitHub CLI tool:
        # https://docs.github.com/en/actions/security-guides/encrypted-secrets#creating-encrypted-secrets-for-a-repository
        GPG_PASSPHRASE: "${{ secrets.GPG_PASSPHRASE }}"
        GPG_SIGNING_PRIVATE_KEY: "${{ secrets.GPG_SIGNING_PRIVATE_KEY }}"
        DOCKER_PASS: "${{ secrets.DOCKER_PASS }}"
        # Enable the GitHub CLI
        PROJECT_GITHUB_PAT: "${{ secrets.PROJECT_GITHUB_PAT }}"
        CI_REPO_FULL_NAME:
          "${{ github.event.pull_request.head.repo.full_name }}"
    permissions:
      packages: "write"
      checks: "write"
    strategy:
      matrix:
        PYTHON_MINORS:
          - "3.11"
          - "3.10"
          - "3.9"
          - "3.8"
          - "3.7"
    name: "build-test (python${{ matrix.PYTHON_MINORS }})"
    steps:

      # Shared/common set up:
      - name: "Checkout source from VCS"
        uses: "actions/checkout@master"
      # TODO: Debug stale venv issues and restore cache once fixed
      - name: "Change checkout owner"
        # https://stackoverflow.com/a/58474340/624787
        run: >-
          chown -R ${PUID}:${PGID} ./ &&
          git config --global --add safe.directory
          /__w/${{ github.event.repository.name }}/${{ github.event.repository.name }}

      # Delegate steps agnostic of the CI/CD platform to the `./Makefile`:
      - name: "Check for any required release notes"
        run: >-
          entrypoint make -e PYTHON_MINORS=${{ matrix.PYTHON_MINORS }}
          check-push
      - name: "Build the container image in which to run the tests"
        run: >-
          entrypoint make -e PYTHON_MINORS=${{ matrix.PYTHON_MINORS }}
          build-docker-${{ matrix.PYTHON_MINORS }}
      - name: "Run the tests and code checks inside the built container"
        run: >-
          entrypoint make -e PYTHON_MINORS=${{ matrix.PYTHON_MINORS }}
          test-docker-${{ matrix.PYTHON_MINORS }} check-clean

      # Upload build artifacts:
      # https://github.com/actions/upload-artifact#usage
      - name: "Archive test suite reports"
        uses: "actions/upload-artifact@master"
        with:
          name: "test-suite-reports"
          path: |
            ./build/*/pytest*
      # https://github.com/marketplace/actions/test-reporter#example
      - name: "Publish test suite report"
        uses: "dorny/test-reporter@main"
        # run this step even if previous step failed
        if: >-
          (success() || failure())
          && startsWith(github.event.pull_request.head.repo.full_name, 'rpatterson/')
        with:
          name: "PyTest Test Suite (python${{ matrix.PYTHON_MINORS }})"
          path: >-
            ./build/*/pytest-junit.xml,
            ./build/*/prospector-xunit.xml
          reporter: "java-junit"
      - name: "Archive code coverage reports"
        uses: "actions/upload-artifact@master"
        with:
          name: "code-coverage-reports"
          path: |
            ./build/*/.coverage*
            ./build/*/coverage*
            ./build/*/htmlcov*
      - name: "Archive linter reports"
        uses: "actions/upload-artifact@master"
        with:
          name: "linter-reports"
          path: |
            ./build/*/prospector*
            ./build/*/pylint*

  release:
    runs-on: "ubuntu-latest"
    needs: ["build-test"]
    if: >-
      startsWith(github.event.pull_request.head.repo.full_name, 'rpatterson/')
      && (github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/master')
    container:
      image: "ghcr.io/${{ github.repository }}:build-host"
      env:
        PUID: "1001"
        PGID: "123"
        CHECKOUT_DIR: "${{ github.workspace }}"
        CODECOV_TOKEN: "${{ secrets.CODECOV_TOKEN }}"
        PROJECT_GITHUB_PAT: "${{ secrets.PROJECT_GITHUB_PAT }}"
        GPG_PASSPHRASE: "${{ secrets.GPG_PASSPHRASE }}"
        GPG_SIGNING_PRIVATE_KEY: "${{ secrets.GPG_SIGNING_PRIVATE_KEY }}"
        PYPI_PASSWORD: "${{ secrets.PYPI_PASSWORD }}"
        TEST_PYPI_PASSWORD: "${{ secrets.TEST_PYPI_PASSWORD }}"
        DOCKER_PASS: "${{ secrets.DOCKER_PASS }}"
    permissions:
      packages: "write"
    steps:

      # Shared/common set up:
      - name: "Checkout source from VCS"
        uses: "actions/checkout@master"
      - name: "Change checkout owner"
        run: >-
          chown -R ${PUID}:${PGID} ./

      # Delegate steps agnostic of the CI/CD platform to the `./Makefile`:
      - name: "Bump the version if publishing a release"
        run: >-
          entrypoint make -e BUILD_REQUIREMENTS=false build-bump check-clean
      - name: "Publish release artifacts"
        run: >-
          entrypoint make -e BUILD_REQUIREMENTS=false release-python check-clean

      # Upload build artifacts:
      - name: "Archive built packages"
        uses: "actions/upload-artifact@master"
        with:
          name: "built-packages"
          path: |
            ./NEWS-release.rst
            ./dist/prunerr-*
