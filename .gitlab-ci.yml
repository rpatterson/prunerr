# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Docker.gitlab-ci.yml
default:
  image: "docker:latest"
  services:
    - "docker:dind"
  before_script:
    # Add user installs to PATH
    - 'export PATH="/home/runner/.local/bin:$PATH"'

variables:
  # Options that affect GitLab CI/CD runner behavior
  GIT_FETCH_EXTRA_FLAGS: "--tags --prune"


  # Secrets from the GitLab CI/CD Variables UI:
  CODECOV_TOKEN: "$CODECOV_TOKEN"
  DOCKER_PASS: "$DOCKER_PASS"
  GPG_PASSPHRASE: "$GPG_PASSPHRASE"
  GPG_SIGNING_PRIVATE_KEY: "$GPG_SIGNING_PRIVATE_KEY"
  PYPI_PASSWORD: "$PYPI_PASSWORD"
  TEST_PYPI_PASSWORD: "$TEST_PYPI_PASSWORD"
  GH_TOKEN: "$GH_TOKEN"

  # Change pip's cache directory to be inside the project directory since we can only
  # cache local items:
  # https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Python.gitlab-ci.yml
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

  # Variables controlling behavior
  PUID: "1001"
  PGID: "1001"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/topics/caching/
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  paths:
    - "./.cache/pip"
    - "./.tox"
    - "./.tox-*"

# Delegate to the `./Makefile` as much as possible to keep as much portable between CI
# platforms

stages:
  - "build-test-release"

build-test-release-job:
  stage: "build-test-release"
  rules:
    # Run only for branches, not tags:
    # https://stackoverflow.com/a/68130421/624787
    - if: "$CI_COMMIT_TAG"
      when: "never"
    - when: "always"
  script:
    # Install packages into container required to hand off to `$ make`
    - "apk update"
    - "apk add make bash git gettext py3-pip gnupg curl github-cli"
    # Add an unprivileged user to cover those use cases and more closely match local
    # development
    - "addgroup -g $PGID runner"
    - "adduser -u $PUID -G runner -g 'CI Runner,,,' -D runner"
    - "chown -Rc $PUID:$PGID ./"
    # Hand off the rest to `$ make` as the unprivileged user
    - "su runner -c 'make -e build-bump build-docker test-docker release'"
  coverage: '/(?i)total.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/'
  artifacts:
    # Upload build artifacts:
    # https://docs.gitlab.com/ee/ci/pipelines/job_artifacts.html
    paths:
      - "./pytest*"
      - "./pytest-junit.xml"
      - "./coverage*"
      - "./htmlcov"
      - "./pylint*"
      - "./.tox-docker/.pkg/dist/*"
      - "./dist/*"
      - "./NEWS-release.rst"
    reports:
      junit: "./pytest-junit.xml"
      coverage_report:
        coverage_format: "cobertura"
        path: "./coverage.xml"


# TODO: Cache Docker build cache and `./.tox*` directories but not on `master`

# TODO: Push container image to GitLab container registry? I don't currently need this
#       but I can easily imagine the value in it.
