# SPDX-FileCopyrightText: 2023 Ross Patterson <me@rpatterson.net>
#
# SPDX-License-Identifier: MIT

# https://prospector.landscape.io/en/master/profiles.html#global-configuration-options
strictness: "veryhigh"
test-warnings: true
doc-warnings: true
member-warnings: true
autodetect: false
inherits:
  - "full_pep8"
max-line-length: 88

# https://prospector.landscape.io/en/master/profiles.html#enabling-and-disabling-tools
bandit:
  run: true
mypy:
  run: true
# Tools that report more when run independently:
# https://github.com/PyCQA/prospector/issues/599#issuecomment-1445406215
vulture:
  run: false
pylint:
  run: false
# Deprecated in favor of PyFlakes:
# https://github.com/timothycrosley/deprecated.frosted#important-note-frosted-is-deprecated-long-live-flake8
# frosted:
#   run: true
# FIXME: I confirmed installing the package but couldn't get to work:
#     Can't run tool pyroma as support wasn't installed.
#     Install by running 'pip3 install prospector[with_pyroma]'
# pyroma:
#   run: true

pyflakes:
  disable:
    # Redundant with `pylint - unused-import`.
    # If a line disables that error with a ` # pylint: disable=unused-import` comment,
    # then it fails with `pyflakes - F401` and vice versa with a ` # noqa: ` comment and
    # I couldn't get both to work in the same comment:
    - "F401"
pep257:
  disable:
    # Choose between the conflicting docstring first line rules:
    # https://github.com/PyCQA/pydocstyle/issues/242#issuecomment-288166773
    - "D212"
    # https://github.com/PyCQA/pydocstyle/issues/141#issuecomment-146903063
    - "D203"
    # I dislike the `One-line docstring should fit on one line with quotes` rule in the
    # first place. I think the mix makes docstrings more difficult to scan visually.
    # The point of these tools is to avoid choices so I went along with it until I
    # discovered that `$ pydocstyle` issues this warning even when the one-line version
    # exceeds the `max-line-length`:
    - "D200"
    # Redundant with `pylint - missing-function-docstring`
    - "D103"

# Prospector's file finding process seems quite expensive, best to aggressively
# exclude directories it should never have to search:
# https://prospector.landscape.io/en/master/profiles.html#ignoring-paths-and-patterns
ignore-paths:
  # Build artifacts that might contain many files:
  #     $ find -mindepth 1 -maxdepth 1 -type d | while read top_dir; do \
  #     > echo "  - \"$(basename "${top_dir}")\""; done
  - "test"
  - "docs"
  - ".mypy_cache"
  - "newsfragments"
  - "styles"
  - "node_modules"
  - ".reuse"
  - "requirements"
  - "build"
  - ".tox"
  - "home"
  - "LICENSES"
  - "var"
  - "bin"
  - ".git"
  - "dist"

  # Ignore failures in these artifacts:
  - "src/prunerr/version.py"

  # TEMPLATE: Add any paths that never contain Python code under `./src/prunerr/`
  # or `./tests/prunerrtests/` for your project:
  #  - "tests/prunerrtests/fixtures"
