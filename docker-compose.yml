# Minimal `$ docker-compose ...` configuration to demonstrate the requirements for
# running Prunerr in containers.
version: "3.8"

services:

  transmission:
    container_name: "transmission"
    image: "linuxserver/transmission"
    environment:
      TZ: "${TZ:-America/Los_Angeles}"
      PUID: "${PUID:-1000}"
      PGID: "${PGID:-100}"
      USER: "${TRANSMISSION_USER:-transmission}"
      PASS: "${TRANSMISSION_PASS}"
    volumes:
      # Exit the container if the core `s6-overlay` service fails.
      # Replace with the correct path for your `$ docker-compose ...` project.
      # - "./s6/etc/services.d/default/finish:/etc/services.d/transmission/finish"
      # Intended for use in the image
      - "./transmission/config/:/config/"
    healthcheck:
      # A deployment with a large number of torrents, as is the intended use case for
      # Prunerr, can take some time to start accepting RPC connections.
      start_period: "60s"
      test: >-
        ping -c 1 dns.google.com &&
        curl -LI -u "${TRANSMISSION_USER}:${TRANSMISSION_PASS}"
        "http://localhost:9091/transmission/rpc/" |
        grep '^X-Transmission-Session-Id: '

  sonarr:
    container_name: "sonarr"
    image: "ghcr.io/hotio/sonarr"
    volumes:
      - "./sonarr/config/:/config/"
    ports:
      - "8989:8989"
    restart: "unless-stopped"
    healthcheck:
      test: >-
        curl -Lv
        "http://sonarr:8989/api/system/status?apikey=${SONARR_API_KEY:-}" |
        grep '"appData": *"/config"'

  radarr:
    container_name: "radarr"
    image: "ghcr.io/hotio/radarr"
    volumes:
      - "./radarr/config/:/config/"
    ports:
      - "7878:7878"
    restart: "unless-stopped"
    healthcheck:
      test: >-
        curl -Lv
        "http://radarr:7878/api/v3/system/status?apikey=${RADARR_API_KEY:-}" |
        grep '"appData": *"/config"'

  prunerr-daemon:
    container_name: "prunerr-daemon"
    image: "rpatterson/prunerr"
    depends_on:
      - "sonarr"
      - "radarr"
    # Match permissions inside and outside the container
    user: "${PUID:-1000}:${PGID:-100}"
    environment:
      # Find the same configuration file even when run as another user, e.g. `root`.
      HOME: "/home/prunerr"
    volumes:
      # Grant access to the download clients torrent files for `readd_missing_data()`
      - "./transmission/config/:/config/"
      # Use the Prunerr config from the Prunerr checkout
      - "./home/.config/:/home/prunerr/.config/"
    restart: "unless-stopped"
