# Minimal `$ docker-compose ...` configuration to demonstrate the requirements for
# running Prunerr in containers.
version: "3.8"

services:

  sonarr:
    image: "ghcr.io/hotio/sonarr"
    volumes:
      - "./sonarr/config/:/config/"
      # Prunerr checkout installed as a Python pip editable source installation
      # on start-up
      - "./prunerr/:/usr/local/src/prunerr/"
      - "./prunerr/etc/cont-init.d/50-prunerr-install:/etc/cont-init.d/50-prunerr-install"
      # Use the Prunerr config from the Prunerr checkout
      # - "./prunerr/home/.config/:/config/.config/"
    ports:
      - "8989:8989"
    restart: "unless-stopped"
    healthcheck:
      test: >-
        curl -Lv
        "http://sonarr:8989/api/system/status?apikey=${SONARR_API_KEY:-}" |
        grep '"appData": *"/config"'

  radarr:
    image: "ghcr.io/hotio/radarr"
    volumes:
      - "./radarr/config/:/config/"
      # Prunerr checkout installed as a Python pip editable source installation
      # on start-up
      - "./prunerr/:/usr/local/src/prunerr/"
      - "./prunerr/etc/cont-init.d/50-prunerr-install:/etc/cont-init.d/50-prunerr-install"
      # Use the Prunerr config from the Prunerr checkout
      # - "./prunerr/home/.config/:/config/.config/"
    ports:
      - "7878:7878"
    restart: "unless-stopped"
    healthcheck:
      test: >-
        curl -Lv
        "http://radarr:7878/api/system/status?apikey=${RADARR_API_KEY:-}" |
        grep '"appData": *"/config"'

  prunerr-daemon:
    image: "ghcr.io/hotio/sonarr"
    depends_on:
      - sonarr
      - radarr
    volumes:
      # Prunerr checkout installed as a Python pip editable source installation
      # on start-up
      - "./prunerr/:/usr/local/src/prunerr/"
      - "./prunerr/etc/cont-init.d/50-prunerr-install:/etc/cont-init.d/50-prunerr-install"
      # Grant access to the download clients torrent files for `readd_missing_data()`
      - "./transmission/config/:/config/"
      # Use the Prunerr config from the Prunerr checkout
      # - "./prunerr/home/.config/:/config/.config/"
      # Disable the Servarr instance S6 service
      - "./prunerr/etc/services.d/servarr/down:/etc/services.d/sonarr/down"
      # Run `$ prunerr daemon` as an S6 service
      - "./prunerr/etc/services.d/prunerr/:/etc/services.d/prunerr/"
