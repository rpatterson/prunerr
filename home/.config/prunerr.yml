daemon:
  ## The number of seconds to wait between each execution of the order of operations.
  ## Default: 60
  # poll: 60
servarrs:
  ## The Servarr application instances, such as Sonarr or Radarr, whose download client
  ## items should be pruned.  At least one Servarr instance must be configured.
  ## Multiple Servarr instances may be given: e.g. prune download client items in both
  ## Sonarr and Radarr.
  - name: "Sonarr"
    type: "sonarr"
    url: "http://localhost:8989"
    api-key: "********************************"
  - name: "Radarr"
    type: "radarr"
    url: "http://localhost:7878"
    api-key: "********************************"
downloaders:
  ## TODO: Support multiple download clients
  ## Support managing download clients without Servarr instances, use these URLs to
  ## connect to download clients instead of looking them up from Servarr settings.
  # urls:
  #   - "https://transmission:secret@transmission.example.com:443/transmission/"
  ## Calculate an appropriate margin of disk space to keep free when deciding whether to
  ## prune download items based the maximum download bandwidth/speed in Mbps and the
  ## amount of time in seconds at that rate for which download clients should be able to
  ## continue downloading without exhausting disk space.
  ## 100 Mb/s, e.g. dedicated ethernet
  max-download-bandwidth: 100
  ## 60 seconds * 60 minutes = 1 hour, default
  # min-download-time-margin: 3600
  ## 60 seconds * 2 daemon poll margin = 2 minutes
  # min-download-time-margin: 120
  ## Should the maximum download bandwidth/speed be set in the download client as a
  ## limit when resuming downloads after previously stopping?  May be useful for QoS to
  ## optimize real download throughput.
  # resume-set-download-bandwidth-limit: false
  ## The base directory of items before they are done downloading.
  # download-dir: "/var/lib/transmission-daemon/downloads"
  ## If items are done downloading, are seeding, and have been successfully imported (or
  ## copied) they will be moved to this directory.  Defaults to an `./imported/`
  ## directory next to the download client's default `./downloads` directory.
  # imported-dir: "/var/lib/transmission-daemon/imported"
  ## If items have been previously imported and subsequently deleted, such as when an
  ## item has been upgraded, they will be moved to this directory.  Defaults to a
  ## `./deleted/` directory next to the download client's default `./downloads`
  ## directory.
  # deleted-dir: "/var/lib/transmission-daemon/deleted"
  ## Settings that control copying downloaded items to remote servarr hosts.  If
  ## unset, downloads are left in place such as when download clients are running on
  ## the same host as the servarr instances.
  # copy:
  ## The command to execute to copy competed downloads.  Must accept two arguments: the
  ## `imported-dir`, and the corresponding destination path on the remote host.  Must
  ## also accept relative paths for each file in the download item on `/dev/stdin`.
  ## Expects the same behaviour as the default `$ rsync ...` command.
  # command: "rsync -tSmP --files-from=-"
  ## The destination remote host and base path in the format accepted as the second
  ## argument to `command`.
  # destination: "servarr.example.com:/media/Library/downloads/"
  ## Workaround an issue with Transmission when starting torrents with no free space.
  ## See the Python docstring for `prunerr.Prunerr.readd_missing_data()` for details.
  # readd-missing-data: true
indexers:
  priorities:
    ## Delete download items that are public torrents before those from private trackers
    ## by putting the priority definitions of private tackers before the definition for
    ## public torrents.
    - name: "ExamplePrivateTracker"
      ## Used to match download items with no corresponding Servarr history from which
      ## the indexer for the item can be found.  Ignored if `name` above does match a
      ## Servarr indexer name.
      urls:
        - "https://tracker.example.com"
      ## Example for a private tracker with various rules that affect both whether
      ## download items should be considered for deletion yet and which itmes should be
      ## deleted first.
      ## TODO: Use some rule engine library?
      operations:
        ## Have download items met the private tracker's minimum requirements for
        ## snatched items.  In this case, until we've either reached a minimum ration
        ## *or* seeded for a long enough amount of time.
        - type: "or"
          ## If download items that haven't meet those minimum requirements, exclude
          ## them from considering for deletion.  As opposed to just sorting those items
          ## that haven't met those requirements to be deleted last.
          filter: true
          operations:
            ## The number of hours after the torrent has been completely downloaded when
            ## it's been available to seed to other leechers.
            - type: "value"
              name: "secondsSeeding"
              ## 10 days * 24 hours * 60 minutes * 60 seconds
              minimum: 864000
            - type: "value"
              name: "ratio"
              minimum: 1.0
        ## Maximize private tracker global user ratio, delete last torrents with the
        ## most bytes uploaded because they may be most likely to keep accruing more
        ## upload to your ratio. As opposed to sorting by individual download item
        ## ratio.
        - type: "value"
          name: "uploadedEver"
          reversed: true
        ## For private trackers with a bonus system for seeding torrents, maximize bonus
        ## points by deleting last the smallest download item that is also larger than
        ## the size that qualifies for the maximum bonus rate.
        - type: "value"
          name: "size_when_done"
          ## Max bonus points rate: 10 GB * 1024 MB * 1024 KB * 1024 B
          minimum: 10737418240
          ## Items that are smaller than the maximum bonus rate size should be
          ## considered for deletion before those that are larger.
          reversed: true
        ## Items that are much larger than the maximum bonus rate size should be
        ## considered for deletion before those that are greater than but also closest
        ## to the maximum bonus rate size.
        - type: "value"
          name: "size_when_done"
    ## Fallback for any download items whose indexer or tracker URLs don't match any
    ## other priorities above.  For example, public torrents.
    - name: null
      operations:
        ## Delete popular download items with a healthy number of seeders before
        ## obscure, less popular items to support the health and breadth of items
        ## available to the community.
        - type: "value"
          name: "ratio"
          reversed: true
