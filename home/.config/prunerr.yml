daemon:
  ## The number of seconds to wait between each execution of the order of operations.
  ## Default: 60
  # poll: 60
servarrs:
  ## The Servarr application instances, such as Sonarr or Radarr, whose download client
  ## items should be pruned.  At least one Servarr instance must be configured.
  ## Multiple Servarr instances may be given: e.g. prune download client items in both
  ## Sonarr and Radarr.
  - name: "Sonarr"
    type: "sonarr"
    url: "http://localhost:8989"
    api-key: "********************************"
  - name: "Radarr"
    type: "radarr"
    url: "http://localhost:7878"
    api-key: "********************************"
downloaders:
  ## TODO: Support multiple download clients
  ## Calculate an appropriate margin of disk space to keep free when deciding whether to
  ## prune download items based the maximum download bandwidth/speed in Mbps and the
  ## amount of time in seconds at that rate for which download clients should be able to
  ## continue downloading without exhausting disk space.
  ## 100 Mb/s, e.g. dedicated ethernet
  max-download-bandwidth: 100
  ## 60 seconds * 60 minutes = 1 hour
  # min-download-time-margin: 3600
  ## Should the maximum download bandwidth/speed be set in the download client as a
  ## limit when resuming downloads after previously stopping?  May be useful for QoS to
  ## optimize real download throughput.
  # resume-set-download-bandwidth-limit: false
  ## The base directory of items before they are done downloading.
  # download-dir: "/var/lib/transmission-daemon/downloads"
  ## If items are done downloading, are seeding, and have been successfully imported (or
  ## copied) they will be moved to this directory.  Defaults to an `./imported/`
  ## directory next to the download client's default `./downloads` directory.
  # imported-dir: "/var/lib/transmission-daemon/imported"
  ## Settings that control copying downloaded items to remote servarr hosts.  If
  ## unset, downloads are left in place such as when download clients are running on
  ## the same host as the servarr instances.
  # copy:
  ## The command to execute to copy competed downloads.  Must accept two arguments: the
  ## `imported-dir`, and the corresponding destination path on the remote host.  Must
  ## also accept relative paths for each file in the download item on `/dev/stdin`.
  ## Expects the same behaviour as the default `$ rsync ...` command.
  # command: "rsync -tSmP --files-from=-"
  ## The destination remote host and base path in the format accepted as the second
  ## argument to `command`.
  # destination: "servarr.example.com:/media/Library/downloads/"
  ## Workaround an issue with Transmission when starting torrents with no free space.
  ## See the Python docstring for `prunerr.Prunerr.readd_missing_data()` for details.
  # readd-missing-data: true
indexers:
  # default-priority: 0
  # priorities:
  #   - tracker.example.com: 1
