[tox]
envlist = lint, py3
# https://tox.wiki/en/latest/example/package.html#setuptools
isolated_build = True

[testenv]
extras = devel
deps = -rrequirements-devel.txt
commands =
    prunerr --help
    python -m prunerr --help
    coverage run
    coverage html
    coverage report

[testenv:lint]
commands =
    flake8
# Many developers find pylint to be too opinionated.  For myself, I find it imensely
# helpful to keep me from being lazy, particularly when it comes to how I structure and
# factor my code.  The line below will cause failures in the commit/push hooks and in CI
# for any errors or warnings throughout the code base (excepting configuration or
# comments that exclude specific code).  Comment out or delete if Pylint isn't to your
# liking.
    pylint "./src/prunerr/"
    rstcheck -r "README.rst" "src/"

[testenv:build]
# Need to install `pip-tools` in an isolated, controlled environment for maximum
# reproducibility.  We could use a separate virtualenv not managed by `$ tox`, but
# managing virtualenvs and installing packages into them is something `$ tox` is good at
# and it provides `skip_install = true` to make what we want to do easy without adding
# another build artifact outside of `./.tox/`.
skip_install = true
deps =
    build
    pip-tools
commands =
    pip-compile --upgrade --output-file="./requirements.txt" "./pyproject.toml"
    pip-compile --upgrade --extra="devel" --output-file="./requirements-devel.txt" \
        "./pyproject.toml"

[gh-actions]
python =
    3.10: lint, py3
